name: Render Rmd to docs (branch deploy)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  render:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install R packages (for 12 notebooks)
        run: |
          Rscript -e 'install.packages(c(
            "rmarkdown","knitr","prettydoc",
            "MASS","FactoMineR","factoextra",
            "nnet","e1071",
            "tidymodels","ranger"
          ))'

      - name: Ensure docs/ + theme + landing (optional)
        shell: bash
        run: |
          mkdir -p docs
          if [ ! -f docs/_config.yml ]; then
            cat > docs/_config.yml <<'YAML'
          title: Multivariate Analysis by R
          description: Showcase of multivariate methods generated from R notebooks
          remote_theme: pages-themes/cayman@v0.2.0
          plugins:
            - jekyll-remote-theme
          markdown: kramdown
          YAML
          fi
          if [ ! -f docs/index.md ]; then
            cat > docs/index.md <<'MD'
          ---
          layout: default
          ---
          # Multivariate Analysis by R
          Welcome! Click a method below.
          MD
          fi

      - name: Debug â€“ list *.Rmd in repo
        run: |
          echo "Root files:" && ls -la
          echo
          echo "Search for *.Rmd (case-insensitive) up to 3 levels:"
          find . -maxdepth 3 -type f \( -iname "*.rmd" -o -iname "*.RMD" \) -print || true

      - name: Render ALL .Rmd (recursive) into docs/
        run: |
          Rscript -e '
            dir.create("docs", showWarnings = FALSE)
            # Common folders to search + recursive search
            roots <- c(".", "rmd", "notebooks", "analysis", "src")
            rmds <- unique(unlist(lapply(roots, function(p)
              if (dir.exists(p)) list.files(p, pattern = "\\\\.[Rr]md$", full.names = TRUE, recursive = TRUE) else character(0)
            )))
            if (length(rmds) == 0) stop("No .Rmd files found anywhere (tried ., rmd, notebooks, analysis, src)")
            for (f in rmds) {
              out <- file.path("docs", paste0(tools::file_path_sans_ext(basename(f)), ".html"))
              message("Rendering: ", f, " -> ", out)
              tryCatch(
                rmarkdown::render(
                  f,
                  output_format = "prettydoc::html_pretty",
                  output_file   = out,
                  envir = new.env()
                ),
                error = function(e) { message("FAILED: ", f, " :: ", e$message); quit(status=1) }
              )
            }
          '

      - name: Show docs/
        run: ls -lah docs || true

      - name: Commit docs/ (force-add)
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add -f docs
          git diff --cached --quiet || git commit -m "Update docs (render Rmd)"
          git push
