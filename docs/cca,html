<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Canonical Correlation Analysis (CCA)</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    .navbar-brand { font-weight: bold; }
    .sidebar {
      position: fixed;
      top: 56px;
      bottom: 0;
      left: 0;
      width: 250px;
      padding: 1rem;
      background-color: #fff;
      border-right: 1px solid #dee2e6;
      overflow-y: auto;
    }
    .content {
      margin-left: 270px;
      padding: 2rem;
    }
    pre code {
      background-color: #212529;
      color: #f8f9fa;
      padding: 1rem;
      display: block;
      border-radius: 6px;
      overflow-x: auto;
    }
    footer {
      background-color: #343a40;
      color: white;
      padding: 1rem 0;
      text-align: center;
      margin-top: 2rem;
    }
  </style>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
  <div class="container-fluid">
    <a class="navbar-brand" href="index.html">Multivariate Analysis by R</a>
  </div>
</nav>

<div class="sidebar">
  <h5 class="fw-bold">Methods</h5>
  <a href="cca.html" class="d-block mb-2">Canonical Correlation Analysis (CCA)</a>
  <a href="#" class="d-block mb-2">Cluster Analysis</a>
  <a href="#" class="d-block mb-2">PCA</a>
</div>

<div class="content">
  <h1>Canonical Correlation Analysis (CCA)</h1>
  <p>This example demonstrates Canonical Correlation Analysis in R using the <code>mtcars</code> dataset.</p>

<pre><code class="language-r">
install.packages(c("CCA", "yacca", "ggplot2", "dplyr"))
library(CCA)      # Main functions: cc(), comput() for canonical correlations
library(yacca)    # Alternative: canonical.cor(), more print options
library(ggplot2)  # Visualizations
library(dplyr)    # Data wrangling
data(mtcars)

X <- mtcars[, c("mpg", "hp", "wt")]
Y <- mtcars[, c("drat", "qsec", "gear")]
# Run CCA
cca_mod <- cc(X, Y)

# Canonical correlations
cca_mod$cor
# Compute loadings (correlation between variables and canonical variates)
cc_results <- comput(X, Y, cca_mod)

# Canonical loadings for X variables
cc_results$xstructcorr

# Canonical loadings for Y variables
cc_results$ystructcorr
library(yacca)
yacca_mod <- cca(X, Y)  # note: yacca's cca() is different from CCA's cc()
print(yacca_mod)
# Compute canonical variates (scores)
u <- as.matrix(scale(X)) %*% cca_mod$xcoef[, 1]
v <- as.matrix(scale(Y)) %*% cca_mod$ycoef[, 1]

plot(u, v,
     xlab = "Canonical Variate 1 (X set)",
     ylab = "Canonical Variate 1 (Y set)",
     main = sprintf("First Canonical Correlation = %.3f", cca_mod$cor[1]))
abline(lm(v ~ u), col = "red")
install.packages("CCP")
library(CCP)

# Wilks' Lambda significance test
p.asym(cca_mod$cor, nrow(X), ncol(X), ncol(Y), tstat = "Wilks")
library(CCA)
library(CCP)
library(ggplot2)

# Data
X <- mtcars[, c("mpg", "hp", "wt")]
Y <- mtcars[, c("drat", "qsec", "gear")]

# Fit CCA
cca_mod <- cc(X, Y)

# Canonical correlations
cca_mod$cor

# Loadings
cc_results <- comput(X, Y, cca_mod)
cc_results$xstructcorr
cc_results$ystructcorr

# Significance test
p.asym(cca_mod$cor, nrow(X), ncol(X), ncol(Y), tstat = "Wilks")

# Plot first canonical variate pair
u <- as.matrix(scale(X)) %*% cca_mod$xcoef[, 1]
v <- as.matrix(scale(Y)) %*% cca_mod$ycoef[, 1]
plot(u, v, xlab = "CV1 (X)", ylab = "CV1 (Y)",
     main = sprintf("First Canonical Correlation = %.3f", cca_mod$cor[1]),
     pch = 19, col = "blue")
abline(lm(v ~ u), col = "red", lwd = 2)
</code></pre>

</div>

<footer>
  Â© 2025 Your Name | Designed for Teaching
</footer>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
