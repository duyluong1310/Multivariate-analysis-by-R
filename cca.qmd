---
title: "Canonical Correlation Analysis (CCA)"
format:
  html:
    code-fold: show
    code-copy: true
---

## Overview
This notebook demonstrates **Canonical Correlation Analysis (CCA)** using the built-in `mtcars` dataset.  
CCA explores the relationships between two sets of variables.

We will:
1. Load required libraries.
2. Fit a CCA model.
3. Examine canonical correlations and loadings.
4. Perform significance testing (Wilks' Lambda).
5. Visualize the first canonical variate pair.

---

## Load Libraries
- **CCA**: Fit CCA (`cc()`), compute structure correlations (`comput()`).
- **yacca**: Alternative CCA implementation with different summaries.
- **ggplot2**: Visualization.
- **dplyr**: Data manipulation.
- **CCP**: Significance tests for canonical correlations.

```{r}
# Install (only run once)
# install.packages(c("CCA", "yacca", "ggplot2", "dplyr", "CCP"))

library(CCA)      # Main functions: cc(), comput()
library(yacca)    # Alternative CCA implementation
library(ggplot2)  # Plotting
library(dplyr)    # Data wrangling
library(CCP)      # Significance testing
cca_mod <- cc(X, Y)

# Canonical correlations
cca_mod$cor
data(mtcars)

X <- mtcars[, c("mpg", "hp", "wt")]
Y <- mtcars[, c("drat", "qsec", "gear")]
cc_results <- comput(X, Y, cca_mod)

# X variables
cc_results$xstructcorr

# Y variables
cc_results$ystructcorr
yacca_mod <- yacca::cca(X, Y)
print(yacca_mod)
p.asym(cca_mod$cor, nrow(X), ncol(X), ncol(Y), tstat = "Wilks")
u <- as.matrix(scale(X)) %*% cca_mod$xcoef[, 1]
v <- as.matrix(scale(Y)) %*% cca_mod$ycoef[, 1]

plot(u, v,
     xlab = "Canonical Variate 1 (X set)",
     ylab = "Canonical Variate 1 (Y set)",
     main = sprintf("First Canonical Correlation = %.3f", cca_mod$cor[1]),
     pch = 19, col = "blue")
abline(lm(v ~ u), col = "red", lwd = 2)
